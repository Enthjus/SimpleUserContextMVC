@model SimpleUserContextMVC.DTOs.UserDto

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>User</h4>
    <hr />
    @await Component.InvokeAsync("User", Model)
    @*<dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Username)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Username)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Password)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Password)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserDetailVM.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserDetailVM.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserDetailVM.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserDetailVM.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserDetailVM.PhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserDetailVM.PhoneNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserDetailVM.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserDetailVM.Address)
        </dd>
    </dl>*@
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
